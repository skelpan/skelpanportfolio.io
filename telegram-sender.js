// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
class TelegramSender {
  constructor(botToken, chatId) {
    this.botToken = botToken || '8325858714:AAHsipAsY-Q_5SnR-pftMkhUSFYvq7lmhwE';
    this.chatId = chatId || '1860716243';
    this.apiUrl = `https://api.telegram.org/bot${this.botToken}/sendMessage`;
  }
  
  async sendMessage(text, parseMode = 'HTML') {
    try {
      const response = await fetch(this.apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          chat_id: this.chatId,
          text: text,
          parse_mode: parseMode
        })
      });
      
      const data = await response.json();
      
      if (data.ok) {
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
        return true;
      } else {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', data);
        return false;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
      return false;
    }
  }
  
  formatVisitorData(visitorData) {
    return `
<b>–ù–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –Ω–∞ —Å–∞–π—Ç–µ</b> üéâ

<b>–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
üëÄ –ü–æ—Å–µ—â–µ–Ω–∏–π: ${visitorData.visits}
‚è±Ô∏è –í—Ä–µ–º—è –Ω–∞ —Å–∞–π—Ç–µ: ${Math.round(visitorData.timeSpent / 60)} –º–∏–Ω—É—Ç
üìÖ –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç: ${new Date(visitorData.firstVisit).toLocaleDateString('ru-RU')}
üîÑ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: ${visitorData.interactions}

<b>–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</b>
${visitorData.deviceInfo.userAgent}
üåê –Ø–∑—ã–∫: ${visitorData.deviceInfo.language}
üñ•Ô∏è –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: ${visitorData.deviceInfo.screenWidth}x${visitorData.deviceInfo.screenHeight}
üìç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${visitorData.deviceInfo.timezone}

<b>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</b>
${visitorData.pagesViewed.map(page => `‚Ä¢ ${page}`).join('\n')}
    `;
  }
  
  formatProjectStats(projectStats) {
    let message = '<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º</b> üìä\n\n';
    
    projectStats.forEach(project => {
      message += `
<b>${project.name}</b>
üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${project.views}
üñ±Ô∏è –ö–ª–∏–∫–æ–≤: ${project.clicks}
üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ—Å—Ç—É–ø: ${project.lastAccessed ? new Date(project.lastAccessed).toLocaleDateString('ru-RU') : '–ù–∏–∫–æ–≥–¥–∞'}
      `;
    });
    
    return message;
  }
  
  formatContactFormData(formData) {
    return `
<b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞</b> ‚úâÔ∏è

<b>–û—Ç:</b> ${formData.name}
<b>Email:</b> ${formData.email}
<b>–í—Ä–µ–º—è:</b> ${formData.timestamp}

<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${formData.message}
    `;
  }
}




